# -*- coding: utf-8 -*-
"""LVADSUSR85_Sravanthi_fal1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aOTrUUvT1rk5JTatbY0TJcpu-ftHPsHE
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from xgboost import XGBClassifier
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,classification_report

data = pd.read_csv('/content/loan_approval.csv')
df = pd.DataFrame(data)
print(df.isnull().sum(),end='\n\n')
print(df.info())
print(df)

le = LabelEncoder()
df[' education'] = le.fit_transform(df[' education'])
df[' self_employed'] = le.fit_transform(df[' self_employed'])
df[' loan_status'] = le.fit_transform(df[' loan_status'])

sns.heatmap(df.corr())
plt.show()

features = df[[' no_of_dependents',' education',' self_employed',' income_annum',' loan_amount',' residential_assets_value',' commercial_assets_value',
               ' luxury_assets_value',' bank_asset_value',' loan_term',' cibil_score']]
labels = df[' loan_status']

x_train,x_test,y_train,y_test = train_test_split(features,labels,test_size=0.3)

model = DecisionTreeClassifier()
model.fit(x_train,y_train)
y_pred = model.predict(x_test)

acc = accuracy_score(y_test,y_pred)
print(acc)

models = {'logistic regression':LogisticRegression(),
          'Decision tree':DecisionTreeClassifier(),
          'Random Forest':RandomForestClassifier(),
          'xgboost':XGBClassifier()
         }

for name,model in models.items():
  model.fit(x_train,y_train)
  y_pred = model.predict(x_test)
  acc = accuracy_score(y_test,y_pred)
  cr = classification_report(y_test,y_pred)
  print(name,acc)
  print(cr)