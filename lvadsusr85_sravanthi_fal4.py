# -*- coding: utf-8 -*-
"""LVADSUSR85_Sravanthi_fal4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ofcyFadtp1L_xXDukv9WBMBUIQDzAKws
"""

import numpy as np
import pandas as pd

data = pd.read_csv('/content/social_network.csv')
df = pd.DataFrame(data)
print(df.isnull().sum(),end='\n\n')
print(df.info())
print(df)

import pandas as pd
from sklearn.ensemble import IsolationForest
import matplotlib.pyplot as plt

df = pd.read_csv('/content/social_network.csv')
features = ["login_activity", "posting_activity", "social_connections"]
X = df[features]
model = IsolationForest()
model.fit(X)
y_pred = model.predict(X)

df["anomaly_score"] = model.decision_function(X)
anomalies = df.loc[df["anomaly_score"] < 0]

df_test= pd.read_csv('/content/social_network.csv')
x=df_test[["login_activity", "posting_activity", "social_connections"]]
df_values=x.values
find=df_values
result=[]
for i in find:
  z=model.predict([i])
  if z==[1]:
    result.append('Not Anomaly')
  elif z==[-1]:
    result.append('Anomaly')
df_test['Anomaly']=result
print(df_test)

plt.scatter(df["social_connections"], df["anomaly_score"], label="Not Anomaly")
plt.scatter(anomalies["social_connections"], anomalies["anomaly_score"], color="r", label="Anomaly")
plt.xlabel("Social Connections")
plt.ylabel("anomaly_score")
plt.legend()
plt.show()

df_test.head()